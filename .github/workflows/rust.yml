name: Rust Android Build

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always
  ANDROID_NDK_VERSION: r28c

jobs:
  build-android:
    name: Rust Android Build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust target for Android
      run: rustup target add aarch64-linux-android

    # Cache NDK so we donâ€™t redownload every run
    - name: Cache Android NDK
      id: cache
      uses: actions/cache@v4
      with:
        path: .android-ndk
        key: ndk-${{ env.ANDROID_NDK_VERSION }}

    - name: Download Android NDK if cache missed
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        sudo apt-get update
        sudo apt-get install -y unzip wget
        wget https://dl.google.com/android/repository/android-ndk-${ANDROID_NDK_VERSION}-linux.zip -O ndk.zip
        unzip -q ndk.zip -d . 
        mv android-ndk-${ANDROID_NDK_VERSION} .android-ndk



    # Configure Cargo linker
    - name: Configure Cargo linker for aarch64
      run: |
        mkdir -p .cargo
        cat > .cargo/config.toml <<EOF
        [target.aarch64-linux-android]
        linker = "${{ github.workspace }}/.android-ndk/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android21-clang"
        EOF

    - name: Build release for Android
      run: cargo build --release --target aarch64-linux-android

    - name: Strip binary
      run: |
        $HOME/android-ndk/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-strip \
          target/aarch64-linux-android/release/xia_display_adaptor

    - name: Install UPX
      run: sudo apt-get install -y upx

    - name: Compress with UPX
      run: upx --brute target/aarch64-linux-android/release/xia_display_adaptor

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: android-xia_display_adaptor
        path: target/aarch64-linux-android/release/xia_display_adaptor
